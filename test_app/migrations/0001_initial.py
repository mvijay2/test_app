# Generated by Django 5.1.5 on 2025-02-01 11:18

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0014_remove_user_role"),
    ]

    operations = [
        migrations.CreateModel(
            name="Farmersdata",
            fields=[
                (
                    "id",
                    models.CharField(max_length=41, primary_key=True, serialize=False),
                ),
                ("date_widget", models.DateTimeField(blank=True, null=True)),
                ("district", models.CharField(blank=True, max_length=9, null=True)),
                ("ngo", models.CharField(blank=True, max_length=4, null=True)),
                (
                    "surveyer_name",
                    models.CharField(blank=True, max_length=17, null=True),
                ),
                ("designation", models.CharField(blank=True, max_length=16, null=True)),
                (
                    "sub_district",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "revenue_village",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("gp", models.CharField(blank=True, max_length=12, null=True)),
                ("village", models.CharField(blank=True, max_length=12, null=True)),
                ("farmer_name", models.CharField(blank=True, max_length=28, null=True)),
                (
                    "father_husband_name",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=6,
                        null=True,
                    ),
                ),
                ("age", models.IntegerField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=2, null=True)),
                (
                    "sub_classification",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("phone_number", models.BigIntegerField(blank=True, null=True)),
                (
                    "primary_occupation",
                    models.CharField(blank=True, max_length=13, null=True),
                ),
                (
                    "primary_occupation_other",
                    models.CharField(blank=True, max_length=28, null=True),
                ),
                ("job_card_number", models.IntegerField(blank=True, null=True)),
                (
                    "income_sources",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "income_sources_other",
                    models.CharField(blank=True, max_length=27, null=True),
                ),
                ("land_owned", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "total_land_owned",
                    models.DecimalField(
                        blank=True, decimal_places=17, max_digits=19, null=True
                    ),
                ),
                (
                    "land_leased_in",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "land_leased_out",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "livestock_owned",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "irrigation_sources",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "type_irrigation_sources",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "type_irrigation_sources_other",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                (
                    "job_card_owned",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "is_women_headed_family",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "is_single_women_family",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "migration_from_family",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "member_in_institution",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "in_which_institution",
                    models.CharField(blank=True, max_length=75, null=True),
                ),
                (
                    "in_which_institution_other",
                    models.CharField(blank=True, max_length=31, null=True),
                ),
                (
                    "hh_has_kitchen_garden",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                (
                    "hh_head_family_photo",
                    models.CharField(blank=True, max_length=17, null=True),
                ),
            ],
            options={
                "ordering": [
                    "id",
                    "date_widget",
                    "district",
                    "ngo",
                    "surveyer_name",
                    "designation",
                    "sub_district",
                    "revenue_village",
                    "gp",
                    "village",
                    "farmer_name",
                    "father_husband_name",
                    "gender",
                    "age",
                    "category",
                    "sub_classification",
                    "phone_number",
                    "primary_occupation",
                    "primary_occupation_other",
                    "job_card_number",
                    "income_sources",
                    "income_sources_other",
                    "land_owned",
                    "total_land_owned",
                    "land_leased_in",
                    "land_leased_out",
                    "livestock_owned",
                    "irrigation_sources",
                    "type_irrigation_sources",
                    "type_irrigation_sources_other",
                    "job_card_owned",
                    "is_women_headed_family",
                    "is_single_women_family",
                    "migration_from_family",
                    "member_in_institution",
                    "in_which_institution",
                    "in_which_institution_other",
                    "hh_has_kitchen_garden",
                    "hh_head_family_photo",
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Events",
            fields=[
                ("event_id", models.AutoField(primary_key=True, serialize=False)),
                ("event_name", models.CharField(max_length=100)),
                ("event_date", models.DateField()),
                ("event_time", models.TimeField()),
                ("event_location", models.CharField(max_length=100)),
                ("event_description", models.TextField()),
                (
                    "user",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
